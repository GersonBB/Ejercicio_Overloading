import java.util.Random;
import java.util.Scanner;
import java.util.InputMismatchException;

class Localidad {
    private String nombre;
    private int capacidadTotal;
    private int boletosVendidos;
    private double precio;

    public Localidad(String nombre, int capacidadTotal, double precio) {
        this.nombre = nombre;
        this.capacidadTotal = capacidadTotal;
        this.boletosVendidos = 0;
        this.precio = precio;
    }

    public String getNombre() {
        return nombre;
    }

    public int getCapacidadTotal() {
        return capacidadTotal;
    }

    public int getBoletosVendidos() {
        return boletosVendidos;
    }

    public double getPrecio() {
        return precio;
    }

    public boolean tieneEspacio() {
        return boletosVendidos < capacidadTotal;
    }

    public boolean hayDisponibilidad(int cantidad) {
        return boletosVendidos + cantidad <= capacidadTotal;
    }

    public void venderBoletos(int cantidad) {
        boletosVendidos += cantidad;
    }
}

class Comprador {
    private String nombre;
    private String dpi;
    private int cantidadBoletosDeseados;
    private double presupuestoMaximo;

    public Comprador(String nombre, String dpi, int cantidadBoletosDeseados, double presupuestoMaximo) {
        this.nombre = nombre;
        this.dpi = dpi;
        this.cantidadBoletosDeseados = cantidadBoletosDeseados;
        this.presupuestoMaximo = presupuestoMaximo;
    }

    public String getNombre() {
        return nombre;
    }

    public String getDpi() {
        return dpi;
    }

    public int getCantidadBoletosDeseados() {
        return cantidadBoletosDeseados;
    }

    public double getPresupuestoMaximo() {
        return presupuestoMaximo;
    }
}

public class TicketSystem {
    private static final int TOTAL_BOLETOS = 60;
    private static final int CANTIDAD_LOCALIDADES = 3;

    private static Localidad[] localidades = {
        new Localidad("Localidad 1", 20, 400),
        new Localidad("Localidad 5", 20, 695),
        new Localidad("Localidad 10", 20, 2350)
    };

    private static Comprador compradorActivo;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int opcion;

        do {
            mostrarMenu();
            opcion = scanner.nextInt();
            ejecutarOpcion(opcion, scanner);
        } while (opcion != 6);
    }

    private static void mostrarMenu() {
        System.out.println("Menú:");
        System.out.println("1. Nuevo comprador");
        System.out.println("2. Nueva solicitud de boletos");
        System.out.println("3. Consultar disponibilidad total");
        System.out.println("4. Consultar disponibilidad individual");
        System.out.println("5. Reporte de caja");
        System.out.println("6. Salir");
        System.out.print("Selecciona una opción: ");
    }

    private static void ejecutarOpcion(int opcion, Scanner scanner) {
        switch (opcion) {
            case 1:
                crearNuevoComprador(scanner);
                break;
            case 2:
                if (compradorActivo != null) {
                    nuevaSolicitudBoletos(scanner);
                } else {
                    System.out.println("No hay comprador activo. Debes crear uno primero.");
                }
                break;
            case 3:
                consultarDisponibilidadTotal();
                break;
            case 4:
                consultarDisponibilidadIndividual(scanner);
                break;
            case 5:
                generarReporteCaja();
                break;
            case 6:
                System.out.println("Saliendo del programa.");
                break;
            default:
                System.out.println("Opción inválida.");
        }
    }

    private static void crearNuevoComprador(Scanner scanner) {
        System.out.print("Ingrese el nombre del comprador: ");
        String nombre = scanner.next();
        System.out.print("Ingrese el DPI del comprador: ");
        String dpi = scanner.next();
        System.out.print("Ingrese la cantidad de boletos deseados: ");
        int cantidadBoletosDeseados = scanner.nextInt();
        System.out.print("Ingrese el presupuesto máximo: ");
        double presupuestoMaximo = scanner.nextDouble();

        compradorActivo = new Comprador(nombre, dpi, cantidadBoletosDeseados, presupuestoMaximo);
        System.out.println("Comprador creado exitosamente.");
    }

    private static void nuevaSolicitudBoletos(Scanner scanner) {
        Random random = new Random();

        int numeroAleatorio = random.nextInt(33000) + 1;
        int a = random.nextInt(15000) + 1;
        int b = random.nextInt(15000) + 1;

        int sumaTotal = numeroAleatorio + a + b;

        if (sumaTotal % 2 == 0) {
            System.out.println("¡Felicidades! Tu ticket es apto para comprar boletos.");

            for (Localidad localidad : localidades) {
                if (localidad.tieneEspacio() && localidad.hayDisponibilidad(compradorActivo.getCantidadBoletosDeseados()) && localidad.getPrecio() <= compradorActivo.getPresupuestoMaximo()) {
                    localidad.venderBoletos(compradorActivo.getCantidadBoletosDeseados());
                    System.out.println("Boletos vendidos en " + localidad.getNombre() + " para " + compradorActivo.getNombre());
                }
            }
        } else {
            System.out.println("Lo siento, tu ticket no es apto para comprar boletos.");
        }
    }

    private static void consultarDisponibilidadTotal() {
        System.out.println("Disponibilidad total de boletos:");
        for (Localidad localidad : localidades) {
            System.out.println(localidad.getNombre() + ": Vendidos - " + localidad.getBoletosVendidos() + ", Disponibles - " + (localidad.getCapacidadTotal() - localidad.getBoletosVendidos()));
        }
    }

    private static void consultarDisponibilidadIndividual(Scanner scanner) {
        System.out.println("Ingrese el número de la localidad (1, 5 o 10): ");

        try {
            int localidadSeleccionada = scanner.nextInt();

            if (localidadSeleccionada == 1 || localidadSeleccionada == 5 || localidadSeleccionada == 10) {
                Localidad localidad = localidades[localidadSeleccionada - 1];
                System.out.println("Disponibilidad en " + localidad.getNombre() + ": Vendidos - " + localidad.getBoletosVendidos() + ", Disponibles - " + (localidad.getCapacidadTotal() - localidad.getBoletosVendidos()));
            } else {
                System.out.println("Número de localidad inválido.");
            }
        } catch (InputMismatchException e) {
            System.out.println("Entrada inválida. Por favor, ingrese un número válido.");
            scanner.nextLine(); // Limpiar el búfer del scanner
        }
    }

    private static void generarReporteCaja() {
        double totalGenerado = 0;
        for (Localidad localidad : localidades) {
            totalGenerado += localidad.getBoletosVendidos() * localidad.getPrecio();
        }
        System.out.println("Total generado de dinero: $" + totalGenerado);
    }
}
